services:
  zookeeper:
    container_name: order_service_zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - kafka-network

  kafka:
    container_name: order_service_kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_EXTERNAL_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:${KAFKA_EXTERNAL_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR}
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - kafka-network

  redpanda-console:
    container_name: order_service_redpanda-console
    image: redpandadata/console:latest
    ports:
      - "${REDPANDA_PORT}:8080"
    environment:
      KAFKA_BROKERS: kafka:29092
      CONNECT_ENABLED: "${REDPANDA_CONNECT_ENABLED}"
      SCHEMA_REGISTRY_ENABLED: "${REDPANDA_SCHEMA_REGISTRY_ENABLED}"
    depends_on:
      - kafka
    networks:
      - kafka-network

networks:
  kafka-network:
    name: kafka-network
    driver: bridge 